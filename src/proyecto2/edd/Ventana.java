/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2.edd;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author dario
 */
public class Ventana extends javax.swing.JFrame {
    Arbol t = new Arbol(); 
    HashTable s = new HashTable(10111); 
    Nodo aux = null;
    Boolean dbCargada = true;
    private final String inicioRonda = "Estas listo para jugar una ronda?";
    private final String adivinado = "¡Qué fácil, ponlo más difícil la próxima vez!";
    private final String defecto = "vuela, ladra, caza\n" +
        "ladra, tiene colmillos, perro\n" +
        "tiene colmillos, cuello largo, tiene trompa\n" +
        "cuello largo, ratón, jirafa\n" +
        "tiene trompa, le gusta entrar al agua, elefante\n" +
        "le gusta entrar al agua, jabalí, se sumerge por largo tiempo\n" +
        "se sumerge por largo tiempo, rinoceronte, hipopótamo\n" +
        "caza, come carroña, águila\n" +
        "come carroña, es insecto, buitre\n" +
        "es insecto, pájaro, mosca";

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        initComponents();
        loadDB.setVisible(false);
        inicializarButton.setVisible(false);
        GuardarInfo.setVisible (false);
        printDB.setVisible(false);
        jTextField1.setVisible(false);
        siButton.setVisible(false);
        noButton.setVisible(false);
        continuarButton.setVisible(false);
        t.createTree(defecto);
    }
    
    
    /**
     * Description: getPath es la que ejecuta el 
     * JFileChooser para determinar la ruta del 
     * archivo txt que funcionará como base de
     * datos 
     * 
     * @author Darío Aldana
     * 
     * @return path: string con la ruta
     */
    private String getPath(){
        JFileChooser selector = new JFileChooser(); 
        selector.setFileFilter(new FileNameExtensionFilter("texto", "csv"));
        selector.showOpenDialog(null); 
        File f = selector.getSelectedFile(); 
        String path = f.getAbsolutePath();
        return path;
    }
    
    /**
     * Inicializa la informacion del arbol y del hashtable
     */
    private void inicializar(){
        this.dbCargada = false; 
        t.inicializar();
        s.vaciar();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        line = new javax.swing.JTextField();
        subtitle = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        printDB = new javax.swing.JButton();
        adminDB = new javax.swing.JButton();
        continuarButton = new javax.swing.JButton();
        siButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();
        search = new javax.swing.JButton();
        play = new javax.swing.JButton();
        loadDB = new javax.swing.JButton();
        inicializarButton = new javax.swing.JButton();
        GuardarInfo = new javax.swing.JButton();
        photo = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        line.setBackground(new java.awt.Color(0, 102, 0));
        getContentPane().add(line, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 320, 10));

        subtitle.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        subtitle.setText("Versión Safari con Diego Go");
        getContentPane().add(subtitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 220, -1));

        title.setFont(new java.awt.Font("Bahnschrift", 3, 68)); // NOI18N
        title.setText("Akinator");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 280, -1));

        printDB.setBackground(new java.awt.Color(255, 255, 204));
        printDB.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        printDB.setText("<html>Ver base de<br>conocimientos</html>");
        printDB.setToolTipText("");
        printDB.setAlignmentY(0.0F);
        printDB.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 0)));
        printDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        printDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printDBActionPerformed(evt);
            }
        });
        getContentPane().add(printDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 140, 50));

        adminDB.setBackground(new java.awt.Color(255, 255, 204));
        adminDB.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        adminDB.setText("<html>ADMINISTRAR BASE<br>DE CONOCIMIENTOS</html>");
        adminDB.setToolTipText("");
        adminDB.setAlignmentY(0.0F);
        adminDB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(207, 83, 0)));
        adminDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        adminDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDBActionPerformed(evt);
            }
        });
        getContentPane().add(adminDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 150, 50));

        continuarButton.setBackground(new java.awt.Color(255, 255, 204));
        continuarButton.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        continuarButton.setText("Continuar");
        continuarButton.setToolTipText("");
        continuarButton.setAlignmentY(0.0F);
        continuarButton.setBorder(new javax.swing.border.MatteBorder(null));
        continuarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(continuarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 90, 30));

        siButton.setBackground(new java.awt.Color(255, 255, 224));
        siButton.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        siButton.setText("Sí");
        siButton.setToolTipText("");
        siButton.setAlignmentY(0.0F);
        siButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(152, 255, 150), 3));
        siButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siButtonActionPerformed(evt);
            }
        });
        getContentPane().add(siButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 40, 30));

        noButton.setBackground(new java.awt.Color(255, 255, 224));
        noButton.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        noButton.setText("No");
        noButton.setToolTipText("");
        noButton.setAlignmentY(0.0F);
        noButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(152, 255, 150), 3));
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        getContentPane().add(noButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 40, 30));

        search.setBackground(new java.awt.Color(255, 255, 204));
        search.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        search.setText("BUSCAR ANIMAL");
        search.setToolTipText("");
        search.setAlignmentY(0.0F);
        search.setBorder(new javax.swing.border.MatteBorder(null));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 150, 50));

        play.setBackground(new java.awt.Color(255, 255, 204));
        play.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        play.setText("JUGAR");
        play.setToolTipText("");
        play.setAlignmentY(0.0F);
        play.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 0, 0)));
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });
        getContentPane().add(play, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 150, 50));

        loadDB.setBackground(new java.awt.Color(255, 255, 204));
        loadDB.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        loadDB.setText("<html>Cargar base de<br>conocimientos</html>");
        loadDB.setToolTipText("");
        loadDB.setAlignmentY(0.0F);
        loadDB.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 0, 0)));
        loadDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDBActionPerformed(evt);
            }
        });
        getContentPane().add(loadDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 140, 50));

        inicializarButton.setBackground(new java.awt.Color(255, 255, 204));
        inicializarButton.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        inicializarButton.setText("<html>Inicializar base de<br>conocimientos</html>");
        inicializarButton.setToolTipText("");
        inicializarButton.setAlignmentY(0.0F);
        inicializarButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(207, 83, 0)));
        inicializarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        inicializarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicializarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(inicializarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 140, 50));

        GuardarInfo.setBackground(new java.awt.Color(255, 255, 204));
        GuardarInfo.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        GuardarInfo.setText("<html>Almacenar base de<br>conocimientos</html>");
        GuardarInfo.setBorder(new javax.swing.border.MatteBorder(null));
        GuardarInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GuardarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarInfoActionPerformed(evt);
            }
        });
        getContentPane().add(GuardarInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 140, 50));

        photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photos/Diego.png"))); // NOI18N
        photo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        photo.setMaximumSize(new java.awt.Dimension(81, 21));
        photo.setMinimumSize(new java.awt.Dimension(81, 21));
        getContentPane().add(photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 200, 280));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(255, 255, 227));
        jTextField1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(184, 85, 30)));
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 300, 50));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photos/background.jpg"))); // NOI18N
        background.setText("akinator");
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 380));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void loadDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDBActionPerformed
        inicializar();
        
        StringBuilder db = new StringBuilder();
        try {
            File file = new File(getPath());
            Scanner sc = new Scanner(file);
            sc.nextLine();
            while(sc.hasNext()){
                String line = sc.nextLine();
                db.append(line);
                db.append("\n");
            }
            JOptionPane.showMessageDialog(null, 
                "Archivo cargado con éxito.",
                "¡Éxito! Ya todo está listo",
                JOptionPane.INFORMATION_MESSAGE);
            
            
            
        } catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, 
                    "El archivo no existe o no se encuentra en la ruta especificada",
                    "Error",
                    JOptionPane.ERROR_MESSAGE); 
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, 
                    "Error al leer el archivo",
                    "Error",
                    JOptionPane.ERROR_MESSAGE); 
        }
        
        search.setVisible(true);
        play.setVisible(true);
        adminDB.setVisible(true);
        loadDB.setVisible(false);
        inicializarButton.setVisible(false);
        GuardarInfo.setVisible (false);
        printDB.setVisible(false);
        
        System.out.println("Base de datos cargada: \n" + db);
        this.dbCargada = true; 
        t.createTree(db.toString().toLowerCase());
           
    }//GEN-LAST:event_loadDBActionPerformed

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        if (this.dbCargada){
            play.setVisible(false);
            search.setVisible(false);
            loadDB.setVisible(false);
            jTextField1.setVisible(true);
            siButton.setVisible(true);
            noButton.setVisible(true);
            inicializarButton.setVisible(false);
            printDB.setVisible(false);
            GuardarInfo.setVisible (false);
            adminDB.setVisible(false);
            jTextField1.setText(inicioRonda);
        } else {
            JOptionPane.showMessageDialog(null, 
                    "No existe base de datos. Cargue un archivo para iniciar el juego",
                    "Base de datos no encontrada", 
                    JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_playActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void siButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siButtonActionPerformed
        if (jTextField1.getText().equals(inicioRonda)){
            aux = t.getRoot();
            jTextField1.setText("¿"+aux.getData()+"?");
        } else if (aux.esHoja()){
            jTextField1.setText(adivinado);
            siButton.setVisible(false);
            noButton.setVisible(false);
            continuarButton.setVisible(true);
        } else {
            aux = aux.getRight();
            if (aux.esHoja()){
            jTextField1.setText("¿Es un "+aux.getData()+"?");
            } else {
                jTextField1.setText("¿"+aux.getData()+"?");
            }
        }
    }//GEN-LAST:event_siButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        try{
        
        if (!aux.esHoja()){
            aux = aux.getLeft();
        if (aux.esHoja()){
            jTextField1.setText("¿Es un "+aux.getData()+"?");
        } else {
                jTextField1.setText("¿"+aux.getData()+"?");
            }
        
        } else {
            jTextField1.setText("¡Caramba! No sé qué es.");
            siButton.setVisible(false);
            noButton.setVisible(false);
            continuarButton.setVisible(true);
        
            try{
                String newAnimal = JOptionPane.showInputDialog(null, 
                "¿Qué animal era?", 
                "Agregar Animal", 
                JOptionPane.QUESTION_MESSAGE).toLowerCase();
                
                String diferencia = JOptionPane.showInputDialog(null, 
                "¿Qué diferencia a un " + aux.getData() + " y a un " + newAnimal + "?", 
                "Agregar Animal", 
                JOptionPane.QUESTION_MESSAGE).toLowerCase();
                
                int result = JOptionPane.showConfirmDialog(null,
                        "¿Si el animal fuera un " + newAnimal + ", cuál sería la respuesta a la pregunta?", 
                        "Agregar Animal",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                
                switch (result) {
                    case JOptionPane.YES_OPTION:
                        t.agregarAnimal(aux, diferencia, newAnimal, true);
                        break;
                    case JOptionPane.NO_OPTION:
                        t.agregarAnimal(aux, diferencia, newAnimal, false);
                        break;
                    default:
                        break;
                }
                
                
                jTextField1.setText("¡Mil gracias! Ahorita soy más inteligente.");
                s.insertar(newAnimal);

            } catch (NullPointerException e){
            
            }
            
            System.out.println(aux.getData());
        }
        }catch (NullPointerException x){
            jTextField1.setVisible(false);
            siButton.setVisible(false);
            noButton.setVisible(false);
            continuarButton.setVisible(false);
            search.setVisible(true);
            play.setVisible(true);
            loadDB.setVisible(false);
            inicializarButton.setVisible(false);
            GuardarInfo.setVisible (false);
            printDB.setVisible(false);
            adminDB.setVisible(true);
        }
    }//GEN-LAST:event_noButtonActionPerformed

    private void continuarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuarButtonActionPerformed
        jTextField1.setVisible(false);
        siButton.setVisible(false);
        noButton.setVisible(false);
        continuarButton.setVisible(false);
        search.setVisible(true);
        play.setVisible(true);
        loadDB.setVisible(false);
        inicializarButton.setVisible(false);
        GuardarInfo.setVisible (false);
        printDB.setVisible(false);
        adminDB.setVisible(true);
    }//GEN-LAST:event_continuarButtonActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        
        if(dbCargada){
            s.createHashTable(t.root, s);
            try{
                String animal = JOptionPane.showInputDialog(null, 
                    "Ingrese el nombre del animal que desea buscar", 
                    "Búsqueda de Animal", 
                    JOptionPane.QUESTION_MESSAGE).toLowerCase();

                System.out.println(animal);
                Nodo found = s.buscar(animal);

                if (found == null){
                    JOptionPane.showMessageDialog(null,
                            "El animal buscado no existe en la base de datos",
                            "Animal No Encontrado", 
                            JOptionPane.WARNING_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null,
                            "El animal sí existe en la base de datos",
                            "Animal Encontrado", 
                            JOptionPane.INFORMATION_MESSAGE);
                }
            }catch (NullPointerException e) {}
        } else {JOptionPane.showMessageDialog(null, 
                    "No existe base de datos. Cargue un archivo para poder buscar",
                    "Base de datos no encontrada", 
                    JOptionPane.ERROR_MESSAGE);
        }
          
    }//GEN-LAST:event_searchActionPerformed

    private void inicializarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicializarButtonActionPerformed
        
        try{
            int result = JOptionPane.showConfirmDialog(null,
                "¿Está seguro de inicializar la base de datos?\nEsto borrará la información almacenada", 
                "Inicializar Base de Conocimientos",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
            
            if (result == JOptionPane.YES_OPTION){
                inicializar();
                JOptionPane.showMessageDialog(null,
                    "Base de conocimientos inicializada. \nDebe cargar un archivo para jugar.",
                    "Base de conocimientos inicializada",
                    JOptionPane.INFORMATION_MESSAGE); 
            }
            
        } catch (Exception e){
            System.out.println("Vuelta a menú");
        }
        
        search.setVisible(true);
        play.setVisible(true);
        adminDB.setVisible(true);
        loadDB.setVisible(false);
        inicializarButton.setVisible(false);
        GuardarInfo.setVisible (false);
        printDB.setVisible(false);
        
       
    }//GEN-LAST:event_inicializarButtonActionPerformed

    private void adminDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDBActionPerformed
        // TODO add your handling code here:
        loadDB.setVisible(true);
        inicializarButton.setVisible(true);
        GuardarInfo.setVisible (true);
        printDB.setVisible(true);
        play.setVisible(false);
        adminDB.setVisible(false);
        search.setVisible(false);
        
    }//GEN-LAST:event_adminDBActionPerformed

    private void GuardarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarInfoActionPerformed
        
        if (dbCargada){
           try{
            int result = JOptionPane.showConfirmDialog(null,
                "¿Está seguro de almacenar la base de conocimientos?", 
                "Almacenando Base de Conocimientos",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
            
            if (result == JOptionPane.YES_OPTION){
                
                StringBuilder sb = new StringBuilder();
                sb.append("Pregunta, No, Si");
                String db = t.createTxt(sb, t.root);
                
                JOptionPane.showMessageDialog(null,
                        "Ingrese la ruta del archivo donde se almacenerá la información.",
                        "Guardar Base de Datos",
                        JOptionPane.INFORMATION_MESSAGE);
                
                String path = getPath();
                System.out.println("\n\nDB\n" + db);
                
                PrintWriter pw = new PrintWriter(path);
                pw.write(db);
                pw.close();
                
                JOptionPane.showMessageDialog(null,
                    "Base de conococimientos almacenada con éxito.",
                    "Base de conocimientos almacenada",
                    JOptionPane.INFORMATION_MESSAGE); 

                } 
            
            } catch (Exception e){
                System.out.println("Error; Vuelta a menú");
            }
        } else {JOptionPane.showMessageDialog(null, 
                    "No existe base de datos. Cargue un archivo para poder guardar.",
                    "Base de datos no encontrada", 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        search.setVisible(true);
        play.setVisible(true);
        adminDB.setVisible(true);
        loadDB.setVisible(false);
        inicializarButton.setVisible(false);
        GuardarInfo.setVisible (false);
        printDB.setVisible(false);
  
    }//GEN-LAST:event_GuardarInfoActionPerformed

    private void printDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printDBActionPerformed
        // TODO add your handling code here:
        
        if (dbCargada){
        try {
            String[] options = new String[] {"Diagrama", "En viñetas"};
            int result = JOptionPane.showOptionDialog(null, 
                    "Seleccione la presentación de la base de conocimientos",
                    "Impresión de base de datos", 
                    JOptionPane.DEFAULT_OPTION, 
                    JOptionPane.PLAIN_MESSAGE,
                    null, 
                    options, 
                    null);
            System.out.println(result);
            if (result == 0){
                //ejecuta diagrama
                GUI g = new GUI(t);
                
            } else {
                
                StringBuilder sb = new StringBuilder();
                String recorrido = t.printPreOrder(t.root,sb, "");
                String finalStr = t.print(recorrido);
                
                
                JOptionPane.showMessageDialog(null, 
                    finalStr, 
                    "Recorrido del Directorio", 
                    JOptionPane.INFORMATION_MESSAGE); 
                }   
        } catch (Exception e){
            System.out.println("Vuelta a menú");
        }
        } else {JOptionPane.showMessageDialog(null, 
                    "No existe base de datos. Cargue un archivo para poder buscar.",
                    "Base de datos no encontrada", 
                    JOptionPane.ERROR_MESSAGE);
        }
        
        
        search.setVisible(true);
        play.setVisible(true);
        adminDB.setVisible(true);
        loadDB.setVisible(false);
        inicializarButton.setVisible(false);
        GuardarInfo.setVisible (false);
        printDB.setVisible(false);

    }//GEN-LAST:event_printDBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GuardarInfo;
    private javax.swing.JButton adminDB;
    private javax.swing.JLabel background;
    private javax.swing.JButton continuarButton;
    private javax.swing.JButton inicializarButton;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField line;
    private javax.swing.JButton loadDB;
    private javax.swing.JButton noButton;
    private javax.swing.JLabel photo;
    private javax.swing.JButton play;
    private javax.swing.JButton printDB;
    private javax.swing.JButton search;
    private javax.swing.JButton siButton;
    private javax.swing.JLabel subtitle;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

}
